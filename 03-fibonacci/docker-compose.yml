version: '3'
services:
  postgres: # can be any name (here we chose postgres)
    image: postgres:latest
    container_name: fibonacci_postgres
    environment:
      - POSTGRES_PASSWORD=postgres_password

  redis:
    image: redis:latest
    container_name: fibonacci_redis

  nginx: # can use any other name
    # specify service that Nginx container depends on to avoid error:
    # connect() failed (111: Connection refused) while connecting to upstream,
    # client:[DOCKER INTERNAL IP], server:, request: "GET / HTTP/1.1", upstream: [NETWORK IP]
    depends_on:
      - api
      - client
    restart: always # routing entirely traffic
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80' # map port 3050 on local machine to port 80 inside container

  api:
    restart: always # restart when it crashed and was stopped
    build:
      context: ./server # use ./server directory to build the image
      dockerfile: Dockerfile.dev
    # No need to expose port if we only rely on Nginx to communicate with the api server.
    # Uncomment the following port config to enable direct calling of localhost:5000/api/...
    # on local machine
    # ports:
    #   - '5000:5000'
    volumes:
      - /app/node_modules
      - ./server:/app # bind mount the '/app' directory inside the container to the './server' directory in our local machine
    environment:
      - CHOKIDAR_USEPOLLING=true # environment variable for hot reloading source code (need for Windows)
      - REDIS_HOST=redis # name of the service configured above
      - REDIS_PORT=6379 # default port of redis is 6379
      - PGUSER=postgres
      - PGHOST=postgres # name of the service configured above
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password # same password set for the env POSTGRES_PASSWORD above
      - PGPORT=5432 # default port of postgres is 5432
    image: fibonacci_server
    container_name: fibonacci_server

  client:
    stdin_open: true # avoid "React App exited with Code 0" error in the terminal when attempting to start up the app
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    # No need to expose port if we only rely on Nginx to communicate with the client container.
    # Uncomment the following port config to enable direct calling of localhost:3000
    # on local machine
    # ports:
    #   - '3000:3000'
    volumes:
      - /app/node_modules
      - ./client:/app
    environment:
      - CHOKIDAR_USEPOLLING=true # environment variable for hot reloading source code (need for Windows)
    image: fibonacci_client
    container_name: fibonacci_client

  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /app/node_modules
      - ./worker:/app
    environment:
      - CHOKIDAR_USEPOLLING=true # environment variable for hot reloading source code (need for Windows)
      - REDIS_HOST=redis # name of the service configured above
      - REDIS_PORT=6379 # default port of redis is 6379
    image: fibonacci_worker
    container_name: fibonacci_worker

  # DB Administration Tool
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
